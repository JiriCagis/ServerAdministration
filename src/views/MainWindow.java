package views;

import javax.swing.BoxLayout;
import data.ServerInfo;
import data.XmlParser;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import logic.ServerService;
import java.awt.Toolkit;
import views.listeners.MainWindowListener;

public class MainWindow extends javax.swing.JFrame implements MainWindowListener {

    private final ServerService service;

    public MainWindow() {
        initComponents();
        service = ServerService.getInstance();
        setTitle("Server utility");
        setResizable(false);
        setLocationRelativeTo(null);
        setAlwaysOnTop(true);
        registrateButtonListeners();
        addWindowListener(new WindowListener());
        updateServers();
    }

    private void registrateButtonListeners() {
        settingBtn.setEnabled(false); //functionality not implementet yet because application is very base
        helpBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                openHelpDialog();
            }
        });
    }

    private class WindowListener extends WindowAdapter {

        @Override
        public void windowClosing(WindowEvent e) {
            for(ServerInfo serverInfo:service.getServersInfo()){
                if(serverInfo.isRun())
                    service.stopServer(serverInfo);
            }
            service.saveState();
        }
    }

    @Override
    public void updateServers() {
        contentPanel.removeAll();
        BoxLayout serversLayout = new BoxLayout(contentPanel, BoxLayout.X_AXIS);
        for (ServerInfo serverInfo : service.getServersInfo()) {
            contentPanel.add(new ServerPanel(serverInfo, this));
        }
        contentPanel.add(new NewServerPanel(this));
        contentPanel.setLayout(serversLayout);
        pack();

        if(!isWindowInDisplay())
            resizeWindow();
    }

    private boolean isWindowInDisplay() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        return (this.getSize().width < screenSize.width);
    }

    private void resizeWindow() {
        JScrollPane scrollBar = new JScrollPane();
        JPanel panelInScrollBar = new JPanel();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        scrollBar.setPreferredSize( new Dimension(screenSize.width, contentPanel.getHeight() + 23));     
        panelInScrollBar.setPreferredSize(contentPanel.getSize());
        
        BoxLayout serversLayout = new BoxLayout(panelInScrollBar, BoxLayout.X_AXIS);
        for(Component component:contentPanel.getComponents()){
            panelInScrollBar.add(component);
        }
                 
        panelInScrollBar.setLayout(serversLayout);
        scrollBar.setViewportView(panelInScrollBar);
        contentPanel.removeAll();
        contentPanel.add(scrollBar);
        pack();
    }

    @Override
    public void openNewServerDialog() {
        ServerInfo newInfo = service.createNewServerInfo();
        JDialog dialog = new SetupServerDialog(this, true, newInfo, this);
        dialog.setLocationRelativeTo(this); //set to center main window 
        dialog.setVisible(true);
    }

    @Override
    public void openConfigServerDialog(ServerInfo info) {
        JDialog dialog = new SetupServerDialog(this, true, info, this);
        dialog.setLocationRelativeTo(this); //set to center main window 
        dialog.setVisible(true);
    }

    @Override
    public void openHelpDialog() {
        JDialog dialog = new HelpDialog(this, true);
        dialog.setLocationRelativeTo(this); //set to center main window 
        dialog.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        settingBtn = new javax.swing.JButton();
        helpBtn = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topPanel.setBackground(new java.awt.Color(51, 153, 255));

        headerLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(255, 255, 255));
        headerLabel.setText("Server utility");

        settingBtn.setText("â˜€");
        settingBtn.setPreferredSize(new java.awt.Dimension(41, 25));

        helpBtn.setText("?");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(helpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(settingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerLabel)
                    .addComponent(settingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(helpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JButton helpBtn;
    private javax.swing.JButton settingBtn;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

}
